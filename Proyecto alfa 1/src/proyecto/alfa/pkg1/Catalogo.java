package proyecto.alfa.pkg1;

import javax.swing.JOptionPane;

/**
 *
 * @author Diego
 */
public class Catalogo extends javax.swing.JInternalFrame {
    void inicializarTabla(){
        int i;
        for(i = 0; i < 1; i++){
         listaDeProductos.setValueAt(Producto.listaDeProductos[i].nombreDeProducto, i, 0);
         listaDeProductos.setValueAt(Producto.listaDeProductos[i].precio, i, 1);
         listaDeProductos.setValueAt(Producto.listaDeProductos[i].cantidad, i, 2);
        }
    }
    void actualizarTabla1(){
        int i;
        for(i = 0; i < Producto.listaDeProductos.length; i++){
         listaDeProductos.setValueAt(Producto.listaDeProductos[i].nombreDeProducto, i, 0);
         listaDeProductos.setValueAt(Producto.listaDeProductos[i].precio, i, 1);
         listaDeProductos.setValueAt(Producto.listaDeProductos[i].cantidad, i, 2);
        }
    }
    int currentRow = 0;
    double costoTotal = 0, costoTotalCuenta1, costoTotalCuenta2;
    public Catalogo() {
        initComponents();
        inicializarTabla();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        añadirArticulo = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaDeProductos = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaCarroDeCompras = new javax.swing.JTable();
        cantidad = new javax.swing.JSpinner();
        pagar = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        costoTotal1 = new javax.swing.JTextField();
        costoCuenta1 = new javax.swing.JTextField();
        costoCuenta2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Catálogo de productos");

        añadirArticulo.setText("Añadir articulo(s) a pedido");
        añadirArticulo.setEnabled(false);
        añadirArticulo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                añadirArticuloMouseClicked(evt);
            }
        });

        jSplitPane1.setDividerLocation(350);

        listaDeProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Producto", "Precio", "Cantidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaDeProductos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        listaDeProductos.setRowHeight(24);
        listaDeProductos.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(listaDeProductos);
        if (listaDeProductos.getColumnModel().getColumnCount() > 0) {
            listaDeProductos.getColumnModel().getColumn(0).setMinWidth(80);
            listaDeProductos.getColumnModel().getColumn(0).setPreferredWidth(120);
            listaDeProductos.getColumnModel().getColumn(0).setMaxWidth(150);
            listaDeProductos.getColumnModel().getColumn(1).setMinWidth(50);
            listaDeProductos.getColumnModel().getColumn(1).setPreferredWidth(70);
            listaDeProductos.getColumnModel().getColumn(1).setMaxWidth(100);
            listaDeProductos.getColumnModel().getColumn(2).setMinWidth(50);
            listaDeProductos.getColumnModel().getColumn(2).setPreferredWidth(70);
            listaDeProductos.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        jSplitPane1.setLeftComponent(jScrollPane1);

        listaCarroDeCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Producto", "Precio", "Precio total", "Cantidad", "Cuenta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listaCarroDeCompras.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(listaCarroDeCompras);

        jSplitPane1.setRightComponent(jScrollPane3);

        cantidad.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        pagar.setText("Pagar");
        pagar.setEnabled(false);
        pagar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pagarMouseClicked(evt);
            }
        });

        jLabel10.setText("Costo total");

        costoTotal1.setEditable(false);
        costoTotal1.setText("0");

        costoCuenta1.setEditable(false);
        costoCuenta1.setText("0");

        costoCuenta2.setEditable(false);
        costoCuenta2.setText("0");

        jLabel1.setText("Costo cuenta 1:");

        jLabel2.setText("Costo cuenta 2:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(costoTotal1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pagar))
            .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(añadirArticulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(costoCuenta1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(costoCuenta2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(costoCuenta1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(costoCuenta2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pagar)
                    .addComponent(jLabel10)
                    .addComponent(costoTotal1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(324, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(añadirArticulo)
                    .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void añadirArticuloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_añadirArticuloMouseClicked
        int i = listaDeProductos.getSelectedRow();     
        if(Producto.listaDeProductos[i].cantidad > 0 && (Integer)cantidad.getValue() <= Producto.listaDeProductos[i].cantidad){
        double precioTotalProducto = 0;
        precioTotalProducto = (int) (Producto.listaDeProductos[i].precio * (Integer)cantidad.getValue());
        listaCarroDeCompras.setValueAt(Producto.listaDeProductos[i].nombreDeProducto, currentRow, 0);
        listaCarroDeCompras.setValueAt(Producto.listaDeProductos[i].precio, currentRow, 1);
        listaCarroDeCompras.setValueAt(precioTotalProducto, currentRow, 2);
        listaCarroDeCompras.setValueAt((Integer)cantidad.getValue(), currentRow, 3);
        Producto.listaDeProductos[i].cuentas = Usuario.listaDeUsuarios[Ingresar.auxId].cuentas;
        if(Principal.cuenta1.isSelected())
        listaCarroDeCompras.setValueAt(Usuario.listaDeUsuarios[Ingresar.auxId].cuentas[0], currentRow, 4);
        if(Principal.cuenta2.isSelected())
        listaCarroDeCompras.setValueAt(Usuario.listaDeUsuarios[Ingresar.auxId].cuentas[1], currentRow, 4);  
        currentRow += 1;
        Producto.listaDeProductos[i].cantidad -= (Integer)cantidad.getValue();
        costoTotal += precioTotalProducto;
        costoTotal1.setText(String.valueOf(costoTotal));
        if(Principal.cuenta1.isSelected()){
            costoTotalCuenta1 += precioTotalProducto;
            costoCuenta1.setText(String.valueOf(costoTotalCuenta1));
        }
        if(Principal.cuenta2.isSelected()){
            costoTotalCuenta2 += precioTotalProducto;
            costoCuenta2.setText(String.valueOf(costoTotalCuenta2));
        }
        actualizarTabla1();
        }else{
        JOptionPane.showMessageDialog(this, "No existen suficientes productos en exixstencia");
        }   
    }//GEN-LAST:event_añadirArticuloMouseClicked

    private void pagarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pagarMouseClicked
        if(Cuentas.listaDeCuentas[Usuario.listaDeUsuarios[Ingresar.auxId].cuentas[0]].saldo >= Double.parseDouble(costoCuenta1.getText())){
            Cuentas.listaDeCuentas[Usuario.listaDeUsuarios[Ingresar.auxId].cuentas[0]].saldo -= Double.parseDouble(costoCuenta1.getText());//Cambiar por costo total cuenta 1
            actualizarTabla1();
        } 
        if(Cuentas.listaDeCuentas[Usuario.listaDeUsuarios[Ingresar.auxId].cuentas[1]].saldo >= Double.parseDouble(costoCuenta2.getText())){
            Cuentas.listaDeCuentas[Usuario.listaDeUsuarios[Ingresar.auxId].cuentas[1]].saldo -= Double.parseDouble(costoCuenta2.getText());//Cambiar por costo total cuenta 2
            actualizarTabla1();
            EstadoDeCuenta.actualizarEstado();
        }    
        costoCuenta1.setText("0");
        costoCuenta2.setText("0");
        costoTotal1.setText("0");
        costoTotal = 0;
        costoTotalCuenta1 = 0;
        costoTotalCuenta2 = 0;
        int i;
        for(i = 0; i < 30; i++){
        listaCarroDeCompras.setValueAt(null, i, 0);
        listaCarroDeCompras.setValueAt(null, i, 1);
        listaCarroDeCompras.setValueAt(null, i, 2);
        listaCarroDeCompras.setValueAt(null, i, 3);
        currentRow = 0;
        }
    }//GEN-LAST:event_pagarMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton añadirArticulo;
    public javax.swing.JSpinner cantidad;
    private javax.swing.JTextField costoCuenta1;
    private javax.swing.JTextField costoCuenta2;
    private javax.swing.JTextField costoTotal1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable listaCarroDeCompras;
    private javax.swing.JTable listaDeProductos;
    public static javax.swing.JButton pagar;
    // End of variables declaration//GEN-END:variables
}